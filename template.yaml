AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Create resources to delete old Formstack forms and submissions on a daily basis, in compliance with GDPR.
Parameters:
  Stage:
    Description: Lambda stage.
    Type: String
    AllowedValues:
      - PROD # only PROD currently supported since there isn't a CODE Formstack environment
  FormstackAccountIdAccount1:
    Description: Id of the first Formstack account.
    Type: String
  FormstackAccessTokenAccount1:
    Description: Used to authenticate against the Formstack API for account one.
    Type: String
  FormstackEncryptionPasswordAccount1:
    Description: Used to decrypt Formstack submissions for account 1.
    Type: String
  FormstackAccountIdAccount2:
    Description: Id of the second Formstack account.
    Type: String
  FormstackAccessTokenAccount2:
    Description: Used to authenticate against the Formstack API for account 2.
    Type: String
  FormstackEncryptionPasswordAccount2:
    Description: Used to decrypt Formstack submissions for account 2.
    Type: String
Resources:
  FormDeletionLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri:
        Bucket: delete-expired-formstack-data-dist
        Key: !Sub ${Stage}/delete-expired-formstack-data-lambdas/app.jar
      Description: Lambda to delete old Formstack forms
      Events:
        DailyInvocationAccount1:
          Type: Schedule
          Properties:
            Description: Invoke the lambda to delete expired Formstack forms for account 1 daily at 10am.
            Input: !Sub >
              {
                "formstackAccountId": "${FormstackAccountIdAccount1}",
                "formstackAccessToken": "${FormstackAccessTokenAccount1}",
                "formstackEncryptionPassword": "${FormstackEncryptionPasswordAccount1}"
              }
            Schedule: cron(0 10 * * ? *)
        DailyInvocationAccount2:
          Type: Schedule
          Properties:
            Description: Invoke the lambda to delete expired Formstack forms for account 2 daily at 10am.
            Input: !Sub >
              {
                "formstackAccountId": "${FormstackAccountIdAccount2}",
                "formstackAccessToken": "${FormstackAccessTokenAccount2}",
                "formstackEncryptionPassword": "${FormstackEncryptionPasswordAccount2}"
              }
            Schedule: cron(0 10 * * ? *)
      FunctionName: !Sub formstack-form-deletion-lambda-${Stage}
      Handler: com.gu.formstack.handlers.FormstackFormDeletionHandler::handleRequest
      MemorySize: 256
      Runtime: java11
      Timeout: 900
  SubmissionDeletionLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri:
        Bucket: delete-expired-formstack-data-dist
        Key: !Sub ${Stage}/delete-expired-formstack-data-lambdas/app.jar
      Description: Lambda to delete old Formstack submissions
      # We want to invoke the lambda(s) for deleting forms submissions after the lambda(s) for deleting forms,
      # since this will save on API requests to get and delete submissions.
      Events:
        DailyInvocationAccount1:
          Type: Schedule
          Properties:
            Description: Invoke the lambda to delete expired Formstack submissions for account 1 daily at 11am.
            Input: !Sub >
              {
                "formstackAccountId": "${FormstackAccountIdAccount1}",
                "formstackAccessToken": "${FormstackAccessTokenAccount1}",
                "formstackEncryptionPassword": "${FormstackEncryptionPasswordAccount1}"
              }
            Schedule: cron(0 11 * * ? *)
        DailyInvocationAccount2:
          Type: Schedule
          Properties:
            Description: Invoke the lambda to delete expired Formstack submissions for account 2 daily at 11am.
            Input: !Sub >
              {
                "formstackAccountId": "${FormstackAccountIdAccount2}",
                "formstackAccessToken": "${FormstackAccessTokenAccount2}",
                "formstackEncryptionPassword": "${FormstackEncryptionPasswordAccount2}"
              }
            Schedule: cron(0 11 * * ? *)
      FunctionName: !Sub formstack-submission-deletion-lambda-${Stage}
      Handler: com.gu.formstack.handlers.FormstackSubmissionDeletionHandler::handleRequest
      MemorySize: 256
      Runtime: java11
      Timeout: 900